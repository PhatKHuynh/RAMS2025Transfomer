clc;
clear;
close all;

% Load the data
load('F:\Research\RAMS 2025\RAM_prognostic_modeling\Code\AllFeasTable.mat');
load('F:\Research\RAMS 2025\RAM_prognostic_modeling\Code\importanceScores.mat');

% Define time windows
timeWindows = {'min30', 'min60', 'min120', 'min240'};

labels = categorical(allFeaturesTable.Labels); % Convert labels to categorical
features = allFeaturesTable(:, 1:end-1); % Exclude label column

% Replace NaNs with the mean of each column
featuresFilled = varfun(@(x) fillmissing(x, 'constant', mean(x, 'omitnan')), features);

% Select top k features, ensuring uniqueness across temporal windows
k = 20; % Number of features to select
[~, sortedIndices] = sort(importanceScores, 'descend');
featureNames = featuresFilled.Properties.VariableNames(sortedIndices);
uniqueFeatures = unique(regexprep(featureNames, '_min[30|60|120|240]$', '')); % Remove window identifiers
selectedFeatures = uniqueFeatures(1:k);

% Prepare data structure for transformer
transformerData = zeros(height(featuresFilled), numel(selectedFeatures) * numel(timeWindows));
colNames = {};

% Build column names and fill data
index = 1;
for i = 1:numel(selectedFeatures)
    for j = 1:numel(timeWindows)
        currentFeature = strcat(selectedFeatures{i}, '_', timeWindows{j});
        colNames{index} = strcat(selectedFeatures{i}, '_', num2str(j));
        if ismember(currentFeature, featuresFilled.Properties.VariableNames)
            transformerData(:, index) = table2array(featuresFilled(:, currentFeature));
        else
            disp(['Warning: ', currentFeature, ' not found in the filled table.']);
        end
        index = index + 1;
    end
end

% Check for any column that still has all zeros
zeroColumns = all(transformerData == 0, 1);
if any(zeroColumns)
    disp('Some features are still all zeros after attempted filling.');
end

% Convert to table and add labels
transformerData = array2table(transformerData, 'VariableNames', colNames);
transformerData.Labels = labels;

disp('Data restructuring complete and ready for transformer-based training.');
